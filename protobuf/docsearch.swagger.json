{
  "swagger": "2.0",
  "info": {
    "title": "docsearch.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Docsearch"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/cluster": {
      "get": {
        "operationId": "Docsearch_Cluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/docsearchClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Docsearch"
        ]
      }
    },
    "/v1/cluster/{id}": {
      "delete": {
        "operationId": "Docsearch_Leave",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Docsearch"
        ]
      },
      "put": {
        "operationId": "Docsearch_Join",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/docsearchNode"
            }
          }
        ],
        "tags": [
          "Docsearch"
        ]
      }
    },
    "/v1/dictionaries/{id}": {
      "delete": {
        "operationId": "Docsearch_DeleteDictionary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/docsearchDictionaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Docsearch"
        ]
      },
      "put": {
        "operationId": "Docsearch_UploadDictionary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/docsearchDictionaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "records": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/docsearchUserDictionaryRecord"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Docsearch"
        ]
      }
    },
    "/v1/documents/{tenant}": {
      "delete": {
        "operationId": "Docsearch_BulkDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "requests": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/docsearchDeleteDocument"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Docsearch"
        ]
      },
      "put": {
        "operationId": "Docsearch_Upload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "requests": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/docsearchDocument"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Docsearch"
        ]
      }
    },
    "/v1/documents/{tenant}/{id}": {
      "delete": {
        "operationId": "Docsearch_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Docsearch"
        ]
      },
      "put": {
        "operationId": "Docsearch_Insert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "fields": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        ],
        "tags": [
          "Docsearch"
        ]
      }
    },
    "/v1/liveness_check": {
      "get": {
        "operationId": "Docsearch_LivenessCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/docsearchLivenessCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Docsearch"
        ]
      }
    },
    "/v1/metrics": {
      "get": {
        "operationId": "Docsearch_Metrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/docsearchMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Docsearch"
        ]
      }
    },
    "/v1/node": {
      "get": {
        "operationId": "Docsearch_Node",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/docsearchNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Docsearch"
        ]
      }
    },
    "/v1/readiness_check": {
      "get": {
        "operationId": "Docsearch_ReadinessCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/docsearchReadinessCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Docsearch"
        ]
      }
    },
    "/v1/search/{tenant}": {
      "post": {
        "operationId": "Docsearch_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/docsearchSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "$ref": "#/definitions/docsearchSearchMetadataRequest",
                  "title": "key:\n match_all\n match_query\n match_none\n match_phrase\n multi_phrase\n prefix\n regexp\n term\n term_range\n bool\n date_range\n geo_bounding_box\n geo_distance\n geo_bounding_polygon\n numeric_range\n wildcard\n fuzzy"
                },
                "query": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/docsearchQuery"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Docsearch"
        ]
      }
    }
  },
  "definitions": {
    "MatchQueryMatchOperator": {
      "type": "string",
      "enum": [
        "Unknown",
        "Or",
        "And"
      ],
      "default": "Unknown"
    },
    "docsearchBooleanQuery": {
      "type": "object",
      "properties": {
        "musts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/docsearchQuery"
          }
        },
        "shoulds": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/docsearchQuery"
          }
        },
        "mustNots": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/docsearchQuery"
          }
        },
        "boost": {
          "type": "number",
          "format": "double"
        },
        "minShould": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "docsearchCluster": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/docsearchNode"
          }
        },
        "leader": {
          "type": "string"
        }
      }
    },
    "docsearchClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/docsearchCluster"
        }
      }
    },
    "docsearchDateRangeQuery": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "field": {
          "type": "string",
          "title": "inclusiveStart bool\ninclusiveEnd   bool"
        },
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchDeleteDocument": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        }
      }
    },
    "docsearchDictionaryResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "boolean"
        }
      }
    },
    "docsearchDocument": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "fields": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "docsearchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/docsearchEventType"
        },
        "data": {
          "$ref": "#/definitions/protobufAny"
        }
      }
    },
    "docsearchEventType": {
      "type": "string",
      "enum": [
        "Unknown",
        "JoinNode",
        "LeaveNode",
        "GetNode",
        "Upload",
        "Delete",
        "Search",
        "Dictionary",
        "RemoveDictionary"
      ],
      "default": "Unknown"
    },
    "docsearchFuzzyQuery": {
      "type": "object",
      "properties": {
        "term": {
          "type": "string"
        },
        "prefix": {
          "type": "integer",
          "format": "int32"
        },
        "fuzziness": {
          "type": "integer",
          "format": "int32"
        },
        "field": {
          "type": "string"
        },
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchGeoBoundingBoxQuery": {
      "type": "object",
      "properties": {
        "topLeftLon": {
          "type": "number",
          "format": "double"
        },
        "topLeftLat": {
          "type": "number",
          "format": "double"
        },
        "bottomRightLon": {
          "type": "number",
          "format": "double"
        },
        "bottomRightLat": {
          "type": "number",
          "format": "double"
        },
        "field": {
          "type": "string"
        },
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchGeoBoundingPolygonQuery": {
      "type": "object",
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/docsearchGeoPoint"
          }
        },
        "field": {
          "type": "string"
        },
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchGeoDistanceQuery": {
      "type": "object",
      "properties": {
        "point": {
          "$ref": "#/definitions/docsearchGeoPoint"
        },
        "distance": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchGeoPoint": {
      "type": "object",
      "properties": {
        "lon": {
          "type": "number",
          "format": "double"
        },
        "lat": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchLivenessCheckResponse": {
      "type": "object",
      "properties": {
        "alive": {
          "type": "boolean"
        }
      }
    },
    "docsearchMatchAllQuery": {
      "type": "object",
      "properties": {
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchMatchNoneQuery": {
      "type": "object",
      "properties": {
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchMatchPhraseQuery": {
      "type": "object",
      "properties": {
        "matchPhrase": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "analyzerName": {
          "type": "string"
        },
        "boost": {
          "type": "number",
          "format": "double"
        },
        "slop": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "docsearchMatchQuery": {
      "type": "object",
      "properties": {
        "match": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "analyzerName": {
          "type": "string"
        },
        "boost": {
          "type": "number",
          "format": "double"
        },
        "operator": {
          "$ref": "#/definitions/MatchQueryMatchOperator"
        }
      }
    },
    "docsearchMetadata": {
      "type": "object",
      "properties": {
        "grpcAddress": {
          "type": "string"
        },
        "httpAddress": {
          "type": "string"
        }
      }
    },
    "docsearchMetricsResponse": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "docsearchMultiPhraseQuery": {
      "type": "object",
      "properties": {
        "terms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "field": {
          "type": "string"
        },
        "boost": {
          "type": "number",
          "format": "double"
        },
        "slop": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "docsearchNode": {
      "type": "object",
      "properties": {
        "raftAddress": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/docsearchMetadata"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "docsearchNodeResponse": {
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/docsearchNode"
        }
      }
    },
    "docsearchNumericRangeQuery": {
      "type": "object",
      "properties": {
        "min": {
          "type": "number",
          "format": "double"
        },
        "max": {
          "type": "number",
          "format": "double"
        },
        "field": {
          "type": "string",
          "title": "inclusiveMin bool\ninclusiveMax bool"
        },
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchPrefixQuery": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchQuery": {
      "type": "object",
      "properties": {
        "matchAll": {
          "$ref": "#/definitions/docsearchMatchAllQuery"
        },
        "matchQuery": {
          "$ref": "#/definitions/docsearchMatchQuery"
        },
        "matchNone": {
          "$ref": "#/definitions/docsearchMatchNoneQuery"
        },
        "matchPhrase": {
          "$ref": "#/definitions/docsearchMatchPhraseQuery"
        },
        "multiPhrase": {
          "$ref": "#/definitions/docsearchMultiPhraseQuery"
        },
        "prefix": {
          "$ref": "#/definitions/docsearchPrefixQuery"
        },
        "regexp": {
          "$ref": "#/definitions/docsearchRegexpQuery"
        },
        "term": {
          "$ref": "#/definitions/docsearchTermQuery"
        },
        "termRange": {
          "$ref": "#/definitions/docsearchTermRangeQuery"
        },
        "bool": {
          "$ref": "#/definitions/docsearchBooleanQuery"
        },
        "dateRange": {
          "$ref": "#/definitions/docsearchDateRangeQuery"
        },
        "geoBoundingBox": {
          "$ref": "#/definitions/docsearchGeoBoundingBoxQuery"
        },
        "geoDistance": {
          "$ref": "#/definitions/docsearchGeoDistanceQuery"
        },
        "geoBoundingPolygon": {
          "$ref": "#/definitions/docsearchGeoBoundingPolygonQuery"
        },
        "numericRange": {
          "$ref": "#/definitions/docsearchNumericRangeQuery"
        },
        "wildcard": {
          "$ref": "#/definitions/docsearchWildcardQuery"
        },
        "fuzzy": {
          "$ref": "#/definitions/docsearchFuzzyQuery"
        }
      }
    },
    "docsearchReadinessCheckResponse": {
      "type": "object",
      "properties": {
        "ready": {
          "type": "boolean"
        }
      }
    },
    "docsearchRegexpQuery": {
      "type": "object",
      "properties": {
        "regexp": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchSearchMetadataRequest": {
      "type": "object",
      "properties": {
        "from": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "docsearchSearchResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "docsearchTermQuery": {
      "type": "object",
      "properties": {
        "term": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchTermRangeQuery": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string"
        },
        "max": {
          "type": "string"
        },
        "field": {
          "type": "string",
          "title": "bool inclusiveMin = 3;\nbool inclusiveMax = 4;"
        },
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "docsearchUserDictionaryRecord": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "tokens": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "yomi": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pos": {
          "type": "string"
        }
      }
    },
    "docsearchWatchResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/docsearchEvent"
        }
      }
    },
    "docsearchWildcardQuery": {
      "type": "object",
      "properties": {
        "wildcard": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "boost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}

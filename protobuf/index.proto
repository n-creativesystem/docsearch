syntax = "proto3";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

package index;

option go_package = "github.com/n-creativesystem/docsearch/protobuf";

service Index {
    rpc Node (google.protobuf.Empty) returns (NodeResponse) {
        option(google.api.http) = {
            get: "/v1/node"
        };
    }

    rpc Join (JoinRequest) returns (google.protobuf.Empty) {
        option(google.api.http) = {
            put: "/v1/cluster/{id}"
            body: "node"
        };
    }

    rpc Leave (LeaveRequest) returns (google.protobuf.Empty) {
        option(google.api.http) = {
            delete: "/v1/cluster/{id}"
        };
    }

    rpc Cluster (google.protobuf.Empty) returns (ClusterResponse) {
        option(google.api.http) = {
            get: "/v1/cluster"
        };
    }

    rpc Insert (Document) returns (google.protobuf.Empty) {
        option(google.api.http) = {
            put: "/v1/documents/{id=**}"
            body: "*"
        };
    }

    rpc Delete (DeleteDocument) returns (BatchResponse) {
        option(google.api.http) = {
            delete: "/v1/documents/{id=**}"
        };
    }

    rpc Upload (Documents) returns (BatchResponse) {
        option(google.api.http) = {
            put: "/v1/documents"
            body: "*"
        };
    }

    rpc BulkDelete (DeleteDocuments) returns (BatchResponse) {
        option(google.api.http) = {
            delete: "/v1/documents"
            body: "*"
        };
    }

    rpc Search(SearchRequest) returns (SearchResponse) {
        option(google.api.http) = {
            post: "/v1/search"
            body: "*"
        };
    }

    rpc Watch (google.protobuf.Empty) returns (stream WatchResponse) {}

}

message Metadata {
    string grpc_address = 1;
    string http_address = 2;
}

message Node {
    string raft_address = 1;
    Metadata metadata = 2;
    string state = 3;
}

message NodeResponse {
    Node node = 1;
}

message JoinRequest {
    string id = 1;
    Node node = 2;
}

message LeaveRequest {
    string id = 1;
}

message Cluster {
    map<string, Node> nodes = 1;
    string leader = 2;
}

message ClusterResponse {
    Cluster cluster = 1;
}

message Field {
    google.protobuf.Any body = 1;
    string analyzerName = 2;
    enum Type {
        Text = 0;
        TextBytes = 1;
        Numeric = 2;
        Date = 3;
        GeoPoint = 4;
    }
    Type type = 3;
}

message Document {
    string id = 1;
    map<string, Field> fields = 2;
}

message Documents {
    repeated Document requests = 1;
}

message DeleteDocument {
    string id = 1;
}

message DeleteDocuments {
    repeated DeleteDocument requests = 1;
}

message BatchResponse {
    int32 count = 1;
}

message SearchRequest {
    string query = 1;
    repeated string fields = 2;
    string analyzerName = 3; 
}

message SearchResponse {
    bytes result = 1;
}

message Event {
    enum Type {
        Unknown = 0;
        Join = 1;
        Leave = 2;
        Upload = 3;
        Delete = 4;
    }
    Type type = 1;
    google.protobuf.Any data = 2;
}

message WatchResponse {
    Event event = 1;
}

message SetMetadataRequest {
    string id = 1;
    Metadata metadata = 2;
}

message DeleteMetadataRequest {
    string id = 1;
}